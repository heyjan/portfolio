name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.11
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: app_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, zip, gd
          tools: composer:v2
          coverage: none

      - name: Find project files
        id: find_files
        run: |
          if [ -f "composer.json" ]; then
            echo "project_dir=." >> $GITHUB_OUTPUT
          elif [ -f "app/composer.json" ]; then
            echo "project_dir=app" >> $GITHUB_OUTPUT
          else
            echo "Could not find composer.json"
            find . -name "composer.json"
            exit 1
          fi

      - name: Configure Git
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Install Composer Dependencies
        run: |
          cd ${{ steps.find_files.outputs.project_dir }}
          composer install -v
        env:
          COMPOSER_PROCESS_TIMEOUT: 0
          COMPOSER_NO_INTERACTION: 1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ steps.find_files.outputs.project_dir }}/package-lock.json

      - name: Install JS Dependencies
        run: |
          cd ${{ steps.find_files.outputs.project_dir }}
          npm ci

      - name: Build frontend
        run: |
          cd ${{ steps.find_files.outputs.project_dir }}
          npm run build

  deploy:
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/proxmox/portfolio
            git -C app pull origin master
            docker-compose exec -T app composer install --no-dev --optimize-autoloader
            docker-compose exec -T app npm install
            docker-compose exec -T app npm run build
            docker-compose exec -T app php bin/console doctrine:migrations:migrate --no-interaction
            docker-compose exec -T app php bin/console cache:clear